// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: mage.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Spell int32

const (
	Spell_SPELL_FIREBALL  Spell = 0
	Spell_SPELL_TORNADO   Spell = 2
	Spell_SPELL_ICE_SHARD Spell = 1
)

// Enum value maps for Spell.
var (
	Spell_name = map[int32]string{
		0: "SPELL_FIREBALL",
		2: "SPELL_TORNADO",
		1: "SPELL_ICE_SHARD",
	}
	Spell_value = map[string]int32{
		"SPELL_FIREBALL":  0,
		"SPELL_TORNADO":   2,
		"SPELL_ICE_SHARD": 1,
	}
)

func (x Spell) Enum() *Spell {
	p := new(Spell)
	*p = x
	return p
}

func (x Spell) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Spell) Descriptor() protoreflect.EnumDescriptor {
	return file_mage_proto_enumTypes[0].Descriptor()
}

func (Spell) Type() protoreflect.EnumType {
	return &file_mage_proto_enumTypes[0]
}

func (x Spell) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Spell.Descriptor instead.
func (Spell) EnumDescriptor() ([]byte, []int) {
	return file_mage_proto_rawDescGZIP(), []int{0}
}

var File_mage_proto protoreflect.FileDescriptor

const file_mage_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"mage.proto\x12\tspellfire\x1a\vtypes.proto*C\n" +
	"\x05Spell\x12\x12\n" +
	"\x0eSPELL_FIREBALL\x10\x00\x12\x11\n" +
	"\rSPELL_TORNADO\x10\x02\x12\x13\n" +
	"\x0fSPELL_ICE_SHARD\x10\x01B?Z=github.com/Icemaster-Eric/Spellfire/backend/internal/proto;pbb\x06proto3"

var (
	file_mage_proto_rawDescOnce sync.Once
	file_mage_proto_rawDescData []byte
)

func file_mage_proto_rawDescGZIP() []byte {
	file_mage_proto_rawDescOnce.Do(func() {
		file_mage_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_mage_proto_rawDesc), len(file_mage_proto_rawDesc)))
	})
	return file_mage_proto_rawDescData
}

var file_mage_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_mage_proto_goTypes = []any{
	(Spell)(0), // 0: spellfire.Spell
}
var file_mage_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_mage_proto_init() }
func file_mage_proto_init() {
	if File_mage_proto != nil {
		return
	}
	file_types_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_mage_proto_rawDesc), len(file_mage_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_mage_proto_goTypes,
		DependencyIndexes: file_mage_proto_depIdxs,
		EnumInfos:         file_mage_proto_enumTypes,
	}.Build()
	File_mage_proto = out.File
	file_mage_proto_goTypes = nil
	file_mage_proto_depIdxs = nil
}
